//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace Cp.Data.Mapping
{
    public partial class AnnualExaminationRegistrationMap
        : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Cp.Data.Entities.AnnualExaminationRegistration>
    {
        public AnnualExaminationRegistrationMap()
        {
            // table
            ToTable("AnnualExaminationRegistration", "dbo");

            // keys
            HasKey(t => t.Id);

            // Properties
            Property(t => t.Id)
                .HasColumnName("Id")
                .HasMaxLength(50)
                .IsRequired();
            Property(t => t.Name)
                .HasColumnName("Name")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.UserId)
                .HasColumnName("UserId")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.OrgId)
                .HasColumnName("OrgId")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.Sex)
                .HasColumnName("Sex")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.Birthday)
                .HasColumnName("Birthday")
                .IsOptional();
            Property(t => t.Position)
                .HasColumnName("Position")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.Officetime)
                .HasColumnName("Officetime")
                .IsOptional();
            Property(t => t.RegistrationTime)
                .HasColumnName("RegistrationTime")
                .IsOptional();
            Property(t => t.Nation)
                .HasColumnName("Nation")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.Politicalaffiliation)
                .HasColumnName("Politicalaffiliation")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.DegreeEdu)
                .HasColumnName("DegreeEdu")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.Conclusion)
                .HasColumnName("Conclusion")
                .IsOptional();
            Property(t => t.IsReward)
                .HasColumnName("IsReward")
                .IsOptional();
            Property(t => t.Reward)
                .HasColumnName("Reward")
                .HasMaxLength(500)
                .IsOptional();
            Property(t => t.RewardTime)
                .HasColumnName("RewardTime")
                .IsOptional();
            Property(t => t.RewardReasons)
                .HasColumnName("RewardReasons")
                .HasMaxLength(500)
                .IsOptional();
            Property(t => t.IsPenalty)
                .HasColumnName("IsPenalty")
                .IsOptional();
            Property(t => t.PenaltyTime)
                .HasColumnName("PenaltyTime")
                .IsOptional();
            Property(t => t.Penalty)
                .HasColumnName("Penalty")
                .HasMaxLength(500)
                .IsOptional();
            Property(t => t.PenaltyReasons)
                .HasColumnName("PenaltyReasons")
                .HasMaxLength(500)
                .IsOptional();
            Property(t => t.Scope)
                .HasColumnName("Scope")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.EvaluationCount)
                .HasColumnName("EvaluationCount")
                .IsOptional();
            Property(t => t.FactorScore)
                .HasColumnName("FactorScore")
                .HasPrecision(18, 2)
                .IsOptional();
            Property(t => t.Rate)
                .HasColumnName("Rate")
                .HasPrecision(18, 2)
                .IsOptional();
            Property(t => t.Rank)
                .HasColumnName("Rank")
                .IsOptional();
            Property(t => t.Officialadvice)
                .HasColumnName("Officialadvice")
                .IsOptional();
            Property(t => t.OfficialName)
                .HasColumnName("OfficialName")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.OfficialTime)
                .HasColumnName("OfficialTime")
                .IsOptional();
            Property(t => t.HRAdvice)
                .HasColumnName("HRAdvice")
                .HasMaxLength(500)
                .IsOptional();
            Property(t => t.HRTime)
                .HasColumnName("HRTime")
                .IsOptional();
            Property(t => t.UnitAdvice)
                .HasColumnName("UnitAdvice")
                .HasMaxLength(500)
                .IsOptional();
            Property(t => t.UnitTime)
                .HasColumnName("UnitTime")
                .IsOptional();
            Property(t => t.Notes)
                .HasColumnName("Notes")
                .HasMaxLength(500)
                .IsOptional();
            Property(t => t.Creator)
                .HasColumnName("Creator")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.Created)
                .HasColumnName("Created")
                .IsOptional();
            Property(t => t.Updated)
                .HasColumnName("Updated")
                .IsOptional();

            // Relationships
        }
    }
}
